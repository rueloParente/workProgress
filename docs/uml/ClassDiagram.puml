@startuml
!pragma layout smetana
class House {
  -address: String
  -zipCode: String
  -gpsLocation: String
  -rooms: List<Room>
  -users: List<User>
  +House(address: String, zipCode: String, gpsLocation: String)
  +listRooms() : List<Room>
}
class HouseManager {
-house: House
+HouseManager(house: House)
+addRoom(room: Room) : void
+listRooms() : List<Room>
}

class Room {
  -name: String
  -floor: Integer
  -length: double
  -width: double
  -height: double
  -devices: List<Device>
  -owners: List<User>
  +Room(name: String, floor: Integer, length: double, width: double, height: double)
  +addDevice(Device device) : void
  +addOwner(User user) : void
}

class Device {
  -name: String
  -location: Room
  -type: Type
  -sensors: List<Sensor>
  -actuators: List<Actuator>
  +Device(name : String, location : Room, type : Type)
  +addSensor(Sensor sensor) : void
  +addActuator(Actuator actuator) : void
}

class Sensor {
  -name: String
  -type: Type
  -value: String
}

class Actuator {
  -name: String
  -type: Type
  -value: String
}

class Type {
  -name: String
  -units: String
  -digital: boolean
}

class User {
  -username: String
  -roles: List<Role>
}

class Role {
  -name: String
}


House "1" -- "0..*" Room : contains
Room "1"-- "0..*" Device : contains
Device "1" --"1..*" Sensor : has a
Device "1" --"0..*" Actuator : has a
House "1" -- "1..*" User : has
Room "1" -- "0..*" User : has
User "1"-- "1..*" Role : has
Sensor "1" -- "1" Type : has
Actuator "1" -- "1" Type : has
HouseManager "1" -- "1" House : manages
@enduml